@model OurDestination.Models.Member

@{
    //ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_Layout.cshtml";
}





@using (Html.BeginForm("Create", "Members", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()


    <div class="container-fluid">
        <div class="row">
            <div class="col-md-12">
                <h2 class="text-center text-uppercase">Member @ViewBag.Title</h2>
                <div class="card p-5">


                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                    @if (Model != null)
                    {
                        @Html.HiddenFor(mode => mode.MemberId)
                    }

                    <div class="col-md-12">
                        <fieldset>
                            <legend class="text-uppercase">Member Information</legend>
                        </fieldset>
                        <hr />
                        <div class="row">
                            <div class="col-md-3">
                                <span>Member No</span>
                                <span class="form-group">


                                    @Html.EditorFor(model => model.MemberNo, new { htmlAttributes = new { @class = "form-control", id = "MemberNo" } })
                                    @Html.ValidationMessageFor(model => model.MemberNo, "", new { @class = "text-danger" })
                                </span>
                            </div>
                            <div class="col-md-3">
                                <span>Joining Date</span>
                                <span class="form-group">
                                    <span class="input-group-addon"><i class="icon-calendar"></i></span>
                                    @Html.EditorFor(model => model.JoiningDate, "{0:dd-MMM-yyyy}", new { htmlAttributes = new { @class = "form-control", id = "JoiningDate", autocomplete = "off" } })
                                    @Html.ValidationMessageFor(model => model.JoiningDate, "", new { @class = "text-danger" })
                                </span>
                            </div>

                            <div class="col-md-3">
                                <span>Member Name</span>
                                <span>
                                    @Html.EditorFor(model => model.MemberName, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.MemberName, "", new { @class = "text-danger" })
                                </span>
                            </div>
                            <div class="col-md-3">
                                <span>Father Name</span>
                                <span class="form-group">
                                    @Html.EditorFor(model => model.FatherName, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.FatherName, "", new { @class = "text-danger" })
                                </span>
                            </div>

                        </div>
                        <div class="row">
                            @*<div class="col-md-3">
                                    <span>Spouse Name</span>
                                    <span>
                                        @Html.EditorFor(model => model.SpouseName, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.SpouseName, "", new { @class = "text-danger" })
                                    </span>
                                </div>*@
                            @*<div class="col-md-3">
                                    <span>Entry Date</span>
                                    <span class="form-group">
                                        @Html.EditorFor(model => model.EntryDate, new { htmlAttributes = new { @class = "form-control", id = "EntryDate",autocomplete = "off" } })
                                        @Html.ValidationMessageFor(model => model.EntryDate, "", new { @class = "text-danger" })
                                    </span>
                                </div>*@
                            <div class="col-md-3">
                                <span>Mother Name</span>
                                <span class="form-group">
                                    @Html.EditorFor(model => model.MotherName, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.MotherName, "", new { @class = "text-danger" })
                                </span>
                            </div>
                            <div class="col-md-2">
                                <span>Date of Birth</span>
                                <span class="form-group">
                                    @Html.EditorFor(model => model.DOB, new { htmlAttributes = new { @class = "form-control", id = "DOB", autocomplete = "off" } })
                                    @Html.ValidationMessageFor(model => model.DOB, "", new { @class = "text-danger" })
                                </span>
                            </div>
                            <div class="col-md-2">
                                <span>
                                    @Html.LabelFor(model => model.PhoneNo, htmlAttributes: new { @class = "control-label " })
                                </span>
                                <span class="form-group">
                                    @Html.EditorFor(model => model.PhoneNo, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.PhoneNo, "", new { @class = "text-danger" })
                                </span>
                            </div>
                            <div class="col-md-3">
                                <span>
                                    @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label " })
                                </span>
                                <span class="form-group">
                                    @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                                </span>
                            </div>

                            <div class="col-md-2">
                                <span>
                                    @Html.LabelFor(model => model.Gender, htmlAttributes: new { @class = "control-label " })
                                </span>
                                <span class="form-group">
                                    @Html.EnumDropDownListFor(model => model.Gender, "--Select--", htmlAttributes: new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.Gender, "", new { @class = "text-danger" })
                                </span>
                            </div>
                        </div>
                        <div class="row">
                            @*<div class="col-md-3">
                                    <span>
                                        @Html.LabelFor(model => model.PhotoPath, htmlAttributes: new { @class = "control-label " })
                                    </span>
                                    <span class="form-group">
                                        @Html.EditorFor(model => model.PhotoPath, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.PhotoPath, "", new { @class = "text-danger" })
                                    </span>
                                </div>*@
                            <div class="col-md-4">
                                <span>
                                    Present Address
                                </span>
                                <span class="form-group">
                                    @Html.EditorFor(model => model.PresentAddress, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.PresentAddress, "", new { @class = "text-danger" })
                                </span>

                            </div>
                            <div class="col-md-4">
                                <span>
                                    Permanent Address
                                </span>
                                <span class="form-group">
                                    @Html.EditorFor(model => model.PermanentAddress, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.PermanentAddress, "", new { @class = "text-danger" })
                                </span>

                            </div>
                            <div class="col-md-2">
                                <span>
                                    NID No
                                </span>
                                <span class="form-group">
                                    @Html.EditorFor(model => model.NIDNo, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.NIDNo, "", new { @class = "text-danger" })
                                </span>
                            </div>
                            <div class="col-md-2">
                                <span>
                                    @Html.LabelFor(model => model.Religion, htmlAttributes: new { @class = "control-label " })
                                </span>
                                <span class="form-group">
                                    @Html.EnumDropDownListFor(model => model.Religion, "--Select--", htmlAttributes: new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.Religion, "", new { @class = "text-danger" })
                                </span>

                            </div>
                            @*<div class="col-md-4">
                                    <span>
                                        @Html.LabelFor(model => model.MaritalStatus, htmlAttributes: new { @class = "control-label " })
                                    </span>
                                    <span class="form-group">
                                        @Html.EnumDropDownListFor(model => model.MaritalStatus, "--Select--", htmlAttributes: new { @class = "form-control" })
                                        @Html.ValidationMessageFor(model => model.MaritalStatus, "", new { @class = "text-danger" })
                                    </span>
                                </div>*@
                        </div>
                        <div class="row">
                            <div class="col-md-3">
                                <span>
                                    @Html.LabelFor(model => model.Nationality, htmlAttributes: new { @class = "control-label " })
                                </span>

                                <span>
                                    @Html.EnumDropDownListFor(model => model.Nationality, htmlAttributes: new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.Nationality, "", new { @class = "text-danger" })
                                </span>

                            </div>
                            <div class="col-md-3">
                                <span>
                                    @Html.LabelFor(model => model.BloodGroupId, "Blood Group", htmlAttributes: new { @class = "control-label " })
                                </span>
                                <span class="form-group">
                                    @Html.DropDownList("BloodGroupId", null, "--Select--", htmlAttributes: new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.BloodGroupId, "", new { @class = "text-danger" })
                                </span>

                            </div>
                            <div class="col-md-3">
                                <span>
                                    @Html.LabelFor(model => model.Profession, htmlAttributes: new { @class = "control-label " })
                                </span>
                                <span class="form-group">
                                    @Html.EditorFor(model => model.Profession, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.Profession, "", new { @class = "text-danger" })
                                </span>
                            </div>

                            <div class="col-md-3">
                                <span>
                                    Education
                                </span>
                                <span class="form-group">
                                    @Html.EditorFor(model => model.EducationalQualification, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.EducationalQualification, "", new { @class = "text-danger" })
                                </span>
                            </div>

                        </div>
                        <div class="row">
                            <div class="col-md-4">
                                <span>
                                    Passport No
                                </span>
                                <span class="form-group">
                                    @Html.EditorFor(model => model.PassportNo, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.PassportNo, "", new { @class = "text-danger" })
                                </span>
                            </div>
                            <div class="col-md-4">
                                <div class="form-group">
                                    <label>Attach Photo:</label>
                                    @Html.TextBoxFor(model => model.ImageFile, new { @class = "file-styled", type = "file", id = "text-box", onchange = "ShowImagePreview(this);" })
                                    @*<input type="file" name="ImageFile" required />*@
                                </div>
                            </div>
                            <div class="col-md-4">
                                <div class="form-group">
                                    <label>Preview Photo:</label>

                                    <img src="@Url.Content("~/Content/dashboard_template/")assets/images/placeholder-small.png" id="ImgPrv" />

                                </div>
                            </div>
                            @*<div class="col-md-3">
                                    <span>
                                        @Html.LabelFor(model => model.TinNo, htmlAttributes: new { @class = "control-label " })
                                    </span>
                                    <span class="form-group">
                                        @Html.EditorFor(model => model.TinNo, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.TinNo, "", new { @class = "text-danger" })
                                    </span>

                                </div>*@


                        </div>
                        <fieldset>
                            <legend class="text-uppercase ui-button-text-icon-secondary">Nominee Details</legend>
                        </fieldset>
                        <hr />
                        <div class="row">
                            <div class="col-md-3">
                                <span>
                                    Nominee Name
                                </span>
                                <span class="form-group">
                                    @Html.EditorFor(model => model.NomineeName, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.NomineeName, "", new { @class = "text-danger" })
                                </span>

                            </div>
                            <div class="col-md-3">
                                <span>
                                    Relation
                                </span>
                                <span class="form-group">
                                    @Html.EditorFor(model => model.RelationWithNominee, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.RelationWithNominee, "", new { @class = "text-danger" })
                                </span>

                            </div>
                            <div class="col-md-3">
                                <span>
                                    Nominee NID No
                                </span>
                                <span class="form-group">
                                    @Html.EditorFor(model => model.NomineeNIDNo, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.NomineeNIDNo, "", new { @class = "text-danger" })
                                </span>

                            </div>
                            <div class="col-md-3">
                                <span>
                                    Nominee PhoneNo
                                </span>
                                <span class="form-group">
                                    @Html.EditorFor(model => model.NomineePhoneNo, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.NomineePhoneNo, "", new { @class = "text-danger" })
                                </span>

                            </div>
                        </div>

                        <div>

                            <div class="col-md-12 text-center">
                                <span>
                                    @Html.LabelFor(model => model.IsActive, htmlAttributes: new { @class = "control-label " })
                                </span>
                                <span class="form-group">
                                    <span class="checkbox">
                                        @Html.EditorFor(model => model.IsActive)
                                        @Html.ValidationMessageFor(model => model.IsActive, "", new { @class = "text-danger" })
                                    </span>
                                </span>

                            </div>

                        </div>

                        <div class="row text-center">

                            <div class="col-md-4"></div>
                            <div class="col-md-4">
                                @if (ViewBag.Title == "Create")
                                {
                                    <span>
                                        <input type="submit" value="Save" class="btn btn-primary" />
                                    </span>
                                }
                                else if (ViewBag.Title == "Edit")
                                {
                                    <span>
                                        <input type="submit" value="Update" class="btn btn-warning " />
                                    </span>
                                }
                                else if (ViewBag.Title == "Delete")
                                {
                                    <span>
                                        <button class="btn btn-danger" type="button" onclick="Member_Delete">Delete</button>
                                    </span>
                                }
                                <span>
                                    @Html.ActionLink("Back", "Index", null, null, new { @class = "btn btn-info" })
                                </span>
                            </div>
                            <div class="col-md-4">
                            </div>
                        </div>
                    </div>

                </div>
            </div>
        </div>
    </div>
}

@*<span>
        @Html.ActionLink("Back to List", "Index")
    </span>*@

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")

}

<script type="text/javascript">

    $("#DOB,#JoiningDate,#EntryDate").datepicker({
        onSelect: function (date) {
            // Your CSS changes, just in case you still need them
            $('a.ui-state-default').removeClass('ui-state-highlight');

        },
        dateFormat: "dd-M-yy",
        changeMonth: true,
        changeYear: true,
        yearRange: "1985:2020"
    });

    function CurrentDate() {
        var date = new Date();
        var months = ["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul",
            "Aug", "Sep", "Oct", "Nov", "Dec"];
        var val = date.getDate() + "-" + months[date.getMonth()] + "-" + date.getFullYear();
        return val;
    }


    function ShowImagePreview(input) {
        if (input.files && input.files[0]) {
            var reader = new FileReader();
            reader.onload = function (e) {
                var ext = input.value.substr(input.value.lastIndexOf('.') + 1).toLowerCase();
                if (input.files[0].size < 1048576) {
                    $("#ImgPrv").prop('src', e.target.result)
                        .width(100)
                        .height(100);
                    $("#IMGTxt").val(input.value);
                }
                else if (!(ext == "jpeg" || ext == "jpg" || ext == "png")) {
                    alert("Invalid image file, must select a *.jpeg, *.jpg, *.png file");
                } else {
                    alert("File is too large, must select file under 1 MB. File Size:" + (input.files[0].size / 1048576).toFixed(1) + " MB");
                }
            };
            reader.readAsDataURL(input.files[0]);
        }
    }
</script>